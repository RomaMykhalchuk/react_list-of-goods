{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","maxItemLength","Math","max","map","item","length","arrOfItemLengths","i","push","App","state","isVisible","goodsList","wordMaxLength","limitByWordLength","event","selectedLength","target","value","setState","handleVisibility","prev","handleReverse","reverse","handleReset","sortByLength","sort","a","b","sortByAlphabet","localeCompare","this","className","visibility","type","hidden","onClick","onChange","itemLength","React","Component","GoodsList","filter","itemName","key","Item","ReactDOM","render","document","getElementById"],"mappings":"6JAqBA,I,uEAjBMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGIC,EAAgBC,KAAKC,IAAL,MAAAD,KAAI,YAAQF,EAAgBI,KAAI,SAAAC,GAAI,OAAIA,EAAKC,YAC7DC,EAAmB,GAGhBC,EAAI,EAAGA,GAAKP,EAAgB,EAAGO,IACtCD,EAAiBE,KAAKD,G,IAGlBE,E,4MACJC,MAAQ,CACNC,WAAW,EACXC,UAAU,GAAD,OAAMb,GACfc,cAAe,G,EAGjBC,kBAAoB,SAACC,GACnB,IAAMC,EAAiBD,EAAME,OAAOC,MAEpC,EAAKC,SAAS,CACZN,cAAeG,K,EAInBI,iBAAmB,WACjB,EAAKD,UAAS,SAAAE,GAAI,MAAK,CAAEV,WAAYU,EAAKV,e,EAG5CW,cAAgB,WACd,EAAKH,UAAS,SAAAT,GAAK,MAAK,CAAEE,UAAW,YAAIF,EAAME,WAAWW,e,EAG5DC,YAAc,WACZ,EAAKL,SACH,CACEN,cAAe,EACfD,UAAU,GAAD,OAAMb,M,EAKrB0B,aAAe,WACb,EAAKN,UAAS,SAAAT,GAAK,MAAK,CACtBE,UAAW,YAAIF,EAAME,WAAWc,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEtB,OAASuB,EAAEvB,e,EAIhEwB,eAAiB,WACf,EAAKV,UAAS,SAAAT,GAAK,MAAK,CACtBE,UAAW,YAAIF,EAAME,WAAWc,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,cAAcF,W,uDAIzD,IAAD,EACyCG,KAAKrB,MAA7CC,EADD,EACCA,UAAWC,EADZ,EACYA,UAAWC,EADvB,EACuBA,cAE9B,OACE,yBAAKmB,UAAU,OACb,qCACA,4BAAKjC,EAAgBM,QACrB,kBAAC,EAAD,CACE4B,WAAYtB,EACZC,UAAWA,EACXC,cAAeA,IAEjB,4BACEqB,KAAK,SACLC,OAAQxB,EACRyB,QAASL,KAAKX,kBAHhB,SAOA,4BACEc,KAAK,SACLE,QAASL,KAAKT,eAFhB,WAMA,4BACEY,KAAK,SACLE,QAASL,KAAKF,gBAFhB,uBAMA,4BACEK,KAAK,SACLE,QAASL,KAAKP,aAFhB,SAMA,4BACEU,KAAK,SACLE,QAASL,KAAKN,cAFhB,kBAMA,4BACEP,MAAOL,EACPwB,SAAUN,KAAKjB,mBAEdR,EACEH,KAAI,SAAAmC,GAAU,OACb,4BACEpB,MAAOoB,GAENA,Y,GAhGCC,IAAMC,WAyGlBC,EAAY,SAAC,GAAD,IAAGR,EAAH,EAAGA,WAAYrB,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,cAA1B,OAChB,wBAAIsB,QAASF,GACVrB,EACE8B,QAAO,SAAAC,GAAQ,OAAIA,EAAStC,QAAUQ,KACtCV,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAMwC,IAAKxC,EAAMA,KAAMA,SAIpCyC,EAAO,SAAC,GAAD,IAAGzC,EAAH,EAAGA,KAAH,OACX,4BAAKA,IAeQK,ICtJfqC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.9066b7ed.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst maxItemLength = Math.max(...goodsFromServer.map(item => item.length));\nconst arrOfItemLengths = [];\n\n// eslint-disable-next-line no-plusplus\nfor (let i = 1; i <= maxItemLength + 1; i++) {\n  arrOfItemLengths.push(i);\n}\n\nclass App extends React.Component {\n  state = {\n    isVisible: false,\n    goodsList: [...goodsFromServer],\n    wordMaxLength: 0,\n  }\n\n  limitByWordLength = (event) => {\n    const selectedLength = event.target.value;\n\n    this.setState({\n      wordMaxLength: selectedLength,\n    });\n  }\n\n  handleVisibility = () => {\n    this.setState(prev => ({ isVisible: !prev.isVisible }));\n  }\n\n  handleReverse = () => {\n    this.setState(state => ({ goodsList: [...state.goodsList].reverse() }));\n  }\n\n  handleReset = () => {\n    this.setState((\n      {\n        wordMaxLength: 0,\n        goodsList: [...goodsFromServer],\n      }\n    ));\n  }\n\n  sortByLength = () => {\n    this.setState(state => ({\n      goodsList: [...state.goodsList].sort((a, b) => a.length - b.length),\n    }));\n  }\n\n  sortByAlphabet = () => {\n    this.setState(state => ({\n      goodsList: [...state.goodsList].sort((a, b) => a.localeCompare(b)),\n    }));\n  }\n\n  render() {\n    const { isVisible, goodsList, wordMaxLength } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        <h2>{goodsFromServer.length}</h2>\n        <GoodsList\n          visibility={isVisible}\n          goodsList={goodsList}\n          wordMaxLength={wordMaxLength}\n        />\n        <button\n          type=\"button\"\n          hidden={isVisible}\n          onClick={this.handleVisibility}\n        >\n          Start\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.handleReverse}\n        >\n          Reverse\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.handleReset}\n        >\n          Reset\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.sortByLength}\n        >\n          Sort by length\n        </button>\n        <select\n          value={wordMaxLength}\n          onChange={this.limitByWordLength}\n        >\n          {arrOfItemLengths\n            .map(itemLength => (\n              <option\n                value={itemLength}\n              >\n                {itemLength}\n              </option>\n            ))}\n        </select>\n      </div>\n    );\n  }\n}\n\nconst GoodsList = ({ visibility, goodsList, wordMaxLength }) => (\n  <ul hidden={!visibility}>\n    {goodsList\n      .filter(itemName => itemName.length >= wordMaxLength)\n      .map(item => <Item key={item} item={item} />)}\n  </ul>\n);\n\nconst Item = ({ item }) => (\n  <li>{item}</li>\n);\n\nGoodsList.propTypes = {\n  visibility: PropTypes.bool.isRequired,\n  wordMaxLength: PropTypes.number.isRequired,\n  goodsList: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n\nItem.propTypes = {\n  item: PropTypes.string.isRequired,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}